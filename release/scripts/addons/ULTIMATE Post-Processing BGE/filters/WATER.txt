uniform sampler2D bgl_RenderedTexture;  // Input texture
uniform float timer;                     // Time uniform for animations
uniform float bgl_RenderedTextureWidth; // Screen width
uniform float bgl_RenderedTextureHeight;// Screen height
uniform float intensity = 0.6;          // Controls the intensity of the effect

void main()
{
    vec2 uv = gl_FragCoord.xy / vec2(bgl_RenderedTextureWidth, bgl_RenderedTextureHeight);
    vec2 offset = vec2(sin(timer * 0.5) * 0.02, cos(timer * 0.5) * 0.02) * intensity;

    // Apply a subtle oscillating distortion
    vec2 distortedUV = uv + offset * sin(uv.y * 10.0 + timer * 3.0);
    distortedUV += offset * cos(uv.x * 10.0 + timer * 3.0);

    // Sample color from the distorted coordinates
    vec4 color = texture2D(bgl_RenderedTexture, distortedUV);

    // Apply color manipulation based on coordinates
    color.rgb += sin(distortedUV.x * 5.0 + timer) * 0.1 * intensity;
    color.rgb -= cos(distortedUV.y * 5.0 - timer) * 0.1 * intensity;

    // Output the final color
    gl_FragColor = vec4(color.rgb, 1.0);
}
